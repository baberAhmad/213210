

                     Lab 06 

        Example: 01

using System;

namespace Program
{
    class OOP
    {
        static void Main(string[] args)
        {
            double a = 98, b = 0;
            double result = 0;
            try
            {
                result = SafeDivision(a,b);
                Console.WriteLine($"{a} divided by {b} = {result}");
            }
            catch(DivideByZeroException e)
            {
                Console.WriteLine("Attempted divided by zero.");
            }
        }

        private static double SafeDivision(double a, double b)
        {
            if (b == 0)
                throw new System.DivideByZeroException();
            return a / b; 
        }
    }
}

    Example: 02

using System;

namespace Program
{
    class OOP
    {
        static void Testcatch2()
        {
            System.IO.StreamWriter sw = null;
            try
            {
                sw = new System.IO.StreamWriter(@"C:\ test \test.txt");
                sw.WriteLine("Hello");
            }
            catch (System.IO.FileNotFoundException ex)
            {
                System.Console.WriteLine(ex.ToString());
            }

            catch (System.IO.IOException ex)
            {
                System.Console.WriteLine(ex.ToString());
            }
            finally
            {
                sw.Close();
            }
            System.Console.WriteLine("Done");
        }
        static void Main(string[] args)
        {
            Testcatch2();
          
        }

    }
}


     Example: 03

using System;

namespace Program
{
    class OOP
    {
        public class WorkItem
        {
            private static int currentID;
            protected int ID { get; set; }
            protected string Title { get; set; }
            protected string Description { get; set; }
            protected TimeSpan jobLength { get; set; }

            public WorkItem()
            {
                ID = 0;
                Title = "Default Title";
                Description = "Default Description. "; jobLength = new TimeSpan();
            }

            public WorkItem(string title, string des, TimeSpan jobLen)
            {
                this.ID = GetNextID(); this.Title = title; this.Description = des; this.jobLength = jobLen;
            }

            static WorkItem()
            {
                currentID = 0;

            }

            protected int GetNextID()
            {
                return ++currentID;
            }

            public void update(string title, TimeSpan joblen)
            {
                this.Title = title;
                this.jobLength = joblen;
            }

            public override string ToString()
            {
                return string.Format("{0} - {1} ", this.ID, this.Title);
            }
        }

        public class changeRequest : WorkItem
        {
            protected int originalItemID { get; set; }
            public changeRequest() { }
            public changeRequest (string title, string desc, TimeSpan joblen, int originalID)
            {
                this.ID = GetNextID();
                this.Title = title;
                this.Description = desc;
                this.jobLength = joblen;
            }

            public changeRequest(int originalItemID)
            {
                this.originalItemID = originalItemID;
            }
        }
        static void Main(string[] args)
        {
            
          WorkItem item = new WorkItem("Fix Bugs ", "Fix all Bugus in my code Branch", new TimeSpan(3,4,0,0));
            changeRequest change = new changeRequest("Change Base Class Design", "Add members to the class ", new TimeSpan(4, 0, 0 ) ,1);
            Console.WriteLine(item.ToString());
            change.update("Change the Design of the base Class ", new TimeSpan(4, 0, 0));
            Console.WriteLine(change.ToString());
            Console.WriteLine("Press any key to exit");
            Console.ReadKey();
        }

    }
}


          Exercise: 01

ï»¿using System;
namespace exercise01
{
    enum Department
    {
        ComputerScience,
        ElectricalEngineering,
        MechanicalEngineering,
        CivilEngineering,
        BusinessAdministration
    }
    class Person
    {
        public string Name { get; set; }

        public Person()
        {
            Name = null;
        }

        public Person(string name)
        {
            Name = name;
        }
    }


    class Student : Person
    {
        public string RegNo { get; set; }
        public int Age { get; set; }
        public Department Program { get; set; }

        public Student()
        {
            RegNo = null;
            Age = 0;
            Program = Department.ComputerScience;
        }

        public Student(string name, string regNo, int age, Department program)
            : base(name)
        {
            RegNo = regNo;
            Age = age;
            Program = program;
        }
    }

    class Program
    {
        static void Main()
        {

            Student student1 = new Student("John Doe", "12345", 20, Department.BusinessAdministration);
            Console.WriteLine("Name: " + student1.Name);
            Console.WriteLine("Registration Number: " + student1.RegNo);
            Console.WriteLine("Age: " + student1.Age);
            Console.WriteLine("Program: " + student1.Program);
        }
    }
}